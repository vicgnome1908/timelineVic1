### This file was autogenerated by Nexus 0.11.7
### Do not make changes to this file directly


type Action {
  author: User!
  comment: Action
  content: String
  createdAt: DateTime
  id: ID!
  timeline: Timeline!
  type: ActionType!
}

enum ActionType {
  COMMENT
  LIKE
  SHARE
}

type Attachment {
  createdAt: DateTime!
  id: ID!
  timeline: Timeline!
  type: AttachmentType!
  url: String!
}

enum AttachmentOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  type_ASC
  type_DESC
  updatedAt_ASC
  updatedAt_DESC
  url_ASC
  url_DESC
}

enum AttachmentType {
  IMAGE
  STICKER
  URL
  VIDEO
}

input AttachmentWhereInput {
  AND: [AttachmentWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [AttachmentWhereInput!]
  OR: [AttachmentWhereInput!]
  timeline: TimelineWhereInput
  type: AttachmentType
  type_in: [AttachmentType!]
  type_not: AttachmentType
  type_not_in: [AttachmentType!]
  url: String
  url_contains: String
  url_ends_with: String
  url_gt: String
  url_gte: String
  url_in: [String!]
  url_lt: String
  url_lte: String
  url_not: String
  url_not_contains: String
  url_not_ends_with: String
  url_not_in: [String!]
  url_not_starts_with: String
  url_starts_with: String
}

type AuthPayload {
  token: String
  user: User
}

scalar DateTime

type Mutation {
  commentTimeline(content: String, timeline_id: ID): Action

  """upload an attachment"""
  createAttachment(timeline_id: ID, type: String, url: String): Attachment

  """create a time line"""
  createDraft(content: String, title: String): Timeline
  deleteTimeline(id: ID): Timeline
  likeComment(comment_id: ID, timeline_id: ID): Action
  likeTimeline(timeline_id: ID): Action
  login(email: String, password: String): AuthPayload
  mentionUser(timeline_id: ID, user_id: ID): Timeline
  mentionUsers(list_user_id: [ID!], timeline_id: ID): Timeline
  publish(id: ID): Timeline
  replyComment(comment_id: ID, content: String, timeline_id: ID): Action

  """schedule create a timeline in future"""
  scheduleDraft(content: String, date: String, title: String): Boolean
  shareTimeline(timeline_id: ID): Action
  signup(email: String, password: String, username: String): AuthPayload
}

type Query {
  """list of published timeline"""
  feed: [Timeline!]
  filterTimelines(searchString: String): [Timeline!]

  """current user info"""
  me: User
  searchUsers(searchString: String): [User!]

  """find info about a timeline by id"""
  timeline(id: ID): Timeline
}

type Timeline {
  attachments(after: String, before: String, first: Int, last: Int, orderBy: AttachmentOrderByInput, skip: Int, where: AttachmentWhereInput): [Attachment!]
  author: User!

  """number of comment"""
  comment_count: Int
  content: String!
  createdAt: DateTime!
  id: ID!

  """number of interaction"""
  interaction_count: Int
  isPublished: Boolean

  """number of like"""
  like_count: Int
  mentions(after: String, before: String, first: Int, last: Int, orderBy: UserOrderByInput, skip: Int, where: UserWhereInput): [User!]

  """number of like"""
  share_count: Int
  title: String!
  updatedAt: DateTime!
}

input TimelineWhereInput {
  AND: [TimelineWhereInput!]
  attachments_every: AttachmentWhereInput
  attachments_none: AttachmentWhereInput
  attachments_some: AttachmentWhereInput
  author: UserWhereInput
  content: String
  content_contains: String
  content_ends_with: String
  content_gt: String
  content_gte: String
  content_in: [String!]
  content_lt: String
  content_lte: String
  content_not: String
  content_not_contains: String
  content_not_ends_with: String
  content_not_in: [String!]
  content_not_starts_with: String
  content_starts_with: String
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  isPublished: Boolean
  isPublished_not: Boolean
  mentions_every: UserWhereInput
  mentions_none: UserWhereInput
  mentions_some: UserWhereInput
  NOT: [TimelineWhereInput!]
  OR: [TimelineWhereInput!]
  title: String
  title_contains: String
  title_ends_with: String
  title_gt: String
  title_gte: String
  title_in: [String!]
  title_lt: String
  title_lte: String
  title_not: String
  title_not_contains: String
  title_not_ends_with: String
  title_not_in: [String!]
  title_not_starts_with: String
  title_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type User {
  email: String!
  id: ID!
  timelines: [Timeline!]
  username: String!
}

enum UserOrderByInput {
  createdAt_ASC
  createdAt_DESC
  email_ASC
  email_DESC
  id_ASC
  id_DESC
  password_ASC
  password_DESC
  updatedAt_ASC
  updatedAt_DESC
  username_ASC
  username_DESC
}

input UserWhereInput {
  AND: [UserWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  mentions_every: TimelineWhereInput
  mentions_none: TimelineWhereInput
  mentions_some: TimelineWhereInput
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
  timelines_every: TimelineWhereInput
  timelines_none: TimelineWhereInput
  timelines_some: TimelineWhereInput
  username: String
  username_contains: String
  username_ends_with: String
  username_gt: String
  username_gte: String
  username_in: [String!]
  username_lt: String
  username_lte: String
  username_not: String
  username_not_contains: String
  username_not_ends_with: String
  username_not_in: [String!]
  username_not_starts_with: String
  username_starts_with: String
}
